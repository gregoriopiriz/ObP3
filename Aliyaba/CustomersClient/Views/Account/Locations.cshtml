
@{
    ViewBag.Title = "Locations";

}


@Scripts.Render("~/Vendor/Js")

<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCIpK0dcYd-9iTow_8lZkCpxqLqXht_9UA&callback=initMap&libraries=&v=weekly" defer></script>

<div class="container mt-4">
    <button class="shadow btn btn-outline-info" data-toggle="modal" data-target="#AddModal"><i class="fas fa-plus mr-2 mt-2"></i>Agregar Dirección</button>
    <div class="row mt-4">
        @{
            foreach (Common.DTOs.DTO_Location L in ViewBag.Locations)
            {
                <div class="col-md-4 my-4">
                    <div class="card shadow">
                        <div id="@L.ID" class="shadow map w-100" data-lat="@L.Latitude" data-lng="@L.Longitude" style="height: 200px;">

                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col">
                                    <h5>
                                        @L.Description
                                    </h5>
                                </div>
                                <div class="col-1">
                                    <a href="@Url.Action("DeleteLocation", "Account")?ID=@L.ID" title="Eliminar" class="float-right remove shadow btn btn-outline-danger">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<div class="modal fade" id="AddModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Agregar Dirección</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @model Common.DTOs.DTO_Location

                @using (Html.BeginForm("AddLocation", "Account"))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div style="display: none;">
                        @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "hide form-control bg-secondary text-light shadow", @id = "latitude" } })
                        @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "hide form-control bg-secondary text-light shadow", @id = "longitude" } })
                    </div>
                    <div id="map" style="width: 100%; height: 300px;" class=" my-3 mx-auto shadow rounded border border-dark"></div>
                    <div style="display: none;">
                        @Html.EditorFor(model => model.CustomerUsername, new { htmlAttributes = new { @class = "hide form-control bg-secondary text-light shadow", @id = "CustomerUsername" } })
                    </div>
                    @Html.LabelFor(model => model.Description, "Descripción")
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control bg-secondary text-light shadow" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    <button class="btn btn-outline-info btn-block mt-3" type="submit"><i class="fas fa-plus mr-2"></i>Agregar</button>
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ShowLocationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div id="map2" class="rounded shadow" style=" width: 100%; height: 300px"></div>
        </div>
    </div>
</div>


<script>
    var map;
    var styles = [
        {
            "elementType": "geometry",
            "stylers": [
                {
                    "color": "#242f3e"
                }
            ]
        },
        {
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#746855"
                }
            ]
        },
        {
            "elementType": "labels.text.stroke",
            "stylers": [
                {
                    "color": "#242f3e"
                }
            ]
        },
        {
            "featureType": "administrative.locality",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#d59563"
                }
            ]
        },
        {
            "featureType": "poi",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#d59563"
                }
            ]
        },
        {
            "featureType": "poi.park",
            "elementType": "geometry",
            "stylers": [
                {
                    "color": "#263c3f"
                }
            ]
        },
        {
            "featureType": "poi.park",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#6b9a76"
                }
            ]
        },
        {
            "featureType": "road",
            "elementType": "geometry",
            "stylers": [
                {
                    "color": "#38414e"
                }
            ]
        },
        {
            "featureType": "road",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "color": "#212a37"
                }
            ]
        },
        {
            "featureType": "road",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#9ca5b3"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "geometry",
            "stylers": [
                {
                    "color": "#746855"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "geometry.stroke",
            "stylers": [
                {
                    "color": "#1f2835"
                }
            ]
        },
        {
            "featureType": "road.highway",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#f3d19c"
                }
            ]
        },
        {
            "featureType": "transit",
            "elementType": "geometry",
            "stylers": [
                {
                    "color": "#2f3948"
                }
            ]
        },
        {
            "featureType": "transit.station",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#d59563"
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "geometry",
            "stylers": [
                {
                    "color": "#17263c"
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "labels.text.fill",
            "stylers": [
                {
                    "color": "#515c6d"
                }
            ]
        },
        {
            "featureType": "water",
            "elementType": "labels.text.stroke",
            "stylers": [
                {
                    "color": "#17263c"
                }
            ]
        },
        {
            featureType: 'poi',
            stylers: [{ visibility: 'off' }]
        },
    ];


    function initMap() {
        $("#CustomerUsername").val("@Session["UserName"].ToString()");
        var markers = [];
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }
        function clearMarkers() {
            setMapOnAll(null);
        }
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        function showMarkers() {
            setMapOnAll(map);
        }
        function placeMarkerAndPanTo(latLng, map) {
            deleteMarkers();
            var marker = new google.maps.Marker({
                position: latLng,
                map: map
            });
            $("#latitude").val(latLng.lat());
            $("#longitude").val(latLng.lng());
            markers.push(marker);
            map.panTo(latLng);
    }
        $('.map').each(function (index) {

            var location = {};
            location.lat = parseFloat($(this).data("lat").toString().replace(",", "."));
            location.lng = parseFloat($(this).data("lng").toString().replace(",", "."));
            console.info(location)
            map = new google.maps.Map(document.getElementById($(this).attr('id')), {
                center: location,
                zoom: 16,
                styles: styles,
                disableDefaultUI: true
            });
            var marker = new google.maps.Marker({
                position: location,
                map: map
            });
        })
        var location = { lat: -34.908377, lng: -54.958371 };
            var map2 = new google.maps.Map(document.getElementById("map"), {
                center: location,
                zoom: 17,
                styles: styles,
                disableDefaultUI: true
            });
            map2.addListener('click', function (e) {
                placeMarkerAndPanTo(e.latLng, map2);
            })
    }
</script>

